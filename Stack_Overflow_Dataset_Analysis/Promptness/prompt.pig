-- prompt.pig

REGISTER /Users/hdadmin/Documents/myudfun.jar;
REGISTER /Users/hdadmin/Documents/Converter.jar;
REGISTER /Users/hdadmin/Documents/mySumUdf.jar;
REGISTER /Users/hdadmin/Documents/TimeDiff.jar;
loaded = LOAD 'hdfs://Shrini:9000/stackexchange/PostQuestions.txt' Using PigStorage() AS (postId:int, ownerUserId:int, creationDate:chararray, postTypeId:int, title:chararray, viewCount:float, score:float, tags:chararray);
qfiltered = FILTER loaded BY NOT(creationDate MATCHES '^40997844.*');
generated = FOREACH qfiltered GENERATE FLATTEN(myudfun.myclass(tags)) AS myword,postId,creationDate;

loadedtwo = LOAD 'hdfs://Shrini:9000/stackexchange/Tags.txt' Using PigStorage() AS (tagId:int,tags:chararray);
joined = JOIN generated BY myword, loadedtwo BY tags;
gener = FOREACH joined GENERATE tagId,tags,postId,creationDate;
loadedthree = LOAD 'hdfs://Shrini:9000/stackexchange/FinalPostAnswers.txt' Using PigStorage() AS (rowId:int, ownerUserId:int, acreationDate:long, postTypeId:int, score:int, commentCount:int, parentId:int);
filtered = FILTER loadedthree BY ownerUserId != 0 and NOT(acreationDate MATCHES '^40997844.*');
grouping = GROUP filtered BY parentId;
generating = FOREACH grouping GENERATE group, MIN($1.acreationDate) AS answerDate;
joining = JOIN gener BY postId, generating BY group;
generator = FOREACH joining GENERATE tagId,tags,postId,creationDate,answerDate;
differed = FOREACH generator GENERATE FLATTEN(Converter.Converter(creationDate,answerDate)) AS timedif,tags;
structured = group differed BY tags;
counted = FOREACH structured GENERATE COUNT($1.timedif) AS tagcounttime, FLATTEN(mySumUdf.mySum($1.timedif)) AS tagcountsum, group;
averaged = FOREACH counted GENERATE tagcountsum/tagcounttime AS tagcountavg,group;
converted = FOREACH averaged GENERATE FLATTEN(TimeDiff.Diff(tagcountavg)), group,tagcountavg;
STORE converted INTO '/mahoutTOA';

